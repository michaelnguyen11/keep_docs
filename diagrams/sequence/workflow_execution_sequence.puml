@startuml Workflow_Execution_Sequence

actor User
participant "Keep UI" as UI
participant "Workflow API" as API
participant "Workflow Engine" as Engine
participant "Context Manager" as Context
participant "Provider System" as Providers
participant "Secrets Service" as Secrets
participant "External Services" as External
database "Database" as DB
queue "Background Tasks" as Queue

== Workflow Configuration ==

User -> UI: Define workflow
activate UI
UI -> API: Create workflow
activate API
API -> DB: Store workflow definition
DB --> API: Confirm storage
API --> UI: Workflow created
deactivate API
UI --> User: Show workflow details
deactivate UI

== Workflow Trigger ==

alt Alert-based Trigger
    note over External, API: Alert received from monitoring tool
    External -> API: Send alert webhook
    activate API
    API -> DB: Store alert
    API -> API: Process alert rules
    API -> Engine: Check for matching workflow triggers
    activate Engine
else Time-based Trigger
    note over Queue, Engine: Scheduled time reached
    Queue -> Engine: Trigger scheduled workflow
    activate Engine
else Manual Trigger
    User -> UI: Manually trigger workflow
    activate UI
    UI -> API: Execute workflow
    activate API
    API -> Engine: Execute workflow
    activate Engine
end

== Workflow Initialization ==

Engine -> DB: Retrieve workflow definition
DB --> Engine: Return workflow data
Engine -> DB: Create workflow run record
DB --> Engine: Return run ID
Engine -> Context: Initialize context
activate Context
Context --> Engine: Context initialized

== Workflow Execution ==

loop For each step in workflow
    alt Condition check
        Engine -> Context: Evaluate condition using context
        Context --> Engine: Condition result
        
        alt Condition is true
            note over Engine: Continue execution
        else Condition is false
            note over Engine: Skip step
            break
        end
    end
    
    alt Step type: step
        Engine -> Context: Get step parameters
        Context --> Engine: Resolved parameters
        Engine -> Engine: Execute step logic
        Engine -> Context: Store step result
        Context --> Engine: Result stored
    
    else Step type: action
        Engine -> Context: Get action parameters
        Context --> Engine: Resolved parameters
        Engine -> Providers: Execute provider action
        activate Providers
        
        Providers -> Secrets: Get provider credentials
        activate Secrets
        Secrets -> DB: Retrieve encrypted credentials
        DB --> Secrets: Return credentials
        Secrets --> Providers: Provide decrypted credentials
        deactivate Secrets
        
        Providers -> External: Execute external API call
        activate External
        External --> Providers: Return response
        deactivate External
        
        Providers --> Engine: Return action result
        deactivate Providers
        
        Engine -> Context: Store action result
        Context --> Engine: Result stored
    
    else Step type: foreach
        Engine -> Context: Get items to iterate
        Context --> Engine: Resolved items
        
        loop For each item
            Engine -> Context: Set current item in context
            Context --> Engine: Item set
            
            note over Engine: Execute nested steps with updated context
            
            Engine -> Context: Clear current item
            Context --> Engine: Item cleared
        end
    
    else Step type: parallel
        note over Engine: Execute steps in parallel
        
        Engine -> Queue: Schedule step 1
        activate Queue
        Queue -> Engine: Execute step 1
        Engine -> Context: Store step 1 result
        Context --> Engine: Result stored
        deactivate Queue
        
        Engine -> Queue: Schedule step 2
        activate Queue
        Queue -> Engine: Execute step 2
        Engine -> Context: Store step 2 result
        Context --> Engine: Result stored
        deactivate Queue
    end
end

== Workflow Completion ==

Engine -> DB: Update workflow run status
DB --> Engine: Confirm update
Engine -> Context: Finalize context
Context --> Engine: Context finalized
deactivate Context
deactivate Engine

alt Manual trigger
    API --> UI: Return workflow result
    deactivate API
    UI --> User: Display workflow result
    deactivate UI
end

@enduml 