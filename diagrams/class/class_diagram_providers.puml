@startuml Provider_Class_Diagram
title Provider Class Hierarchy - Keep AIOps Platform

skinparam classAttributeIconSize 0

class BaseProvider {
  +provider_id: str
  +config: ProviderConfig
  +context_manager: ContextManager
  +PROVIDER_CATEGORY: list
  +PROVIDER_DISPLAY_NAME: str
  +validate_config()
  +validate_scopes(): dict
  +dispose()
}

class ProviderConfig {
  +description: str
  +authentication: dict
  +settings: dict
}

class ContextManager {
  +tenant_id: str
  +workflow_id: str
  +execution_id: str
  +event_context: dict
  +incident_context: dict
  +secret_context: dict
  +set_execution_context()
  +set_event_context()
  +set_incident_context()
  +set_secret_context()
  +set_consts_context()
}

class OpenaiProvider {
  +PROVIDER_CATEGORY: ["AI"] 
  +PROVIDER_DISPLAY_NAME: "OpenAI"
  +query(): dict
}

class AnthropicProvider {
  +PROVIDER_CATEGORY: ["AI"]
  +PROVIDER_DISPLAY_NAME: "Anthropic"
  +query(): dict
}

class SlackProvider {
  +PROVIDER_CATEGORY: ["Communication"]
  +PROVIDER_DISPLAY_NAME: "Slack"
  +send_message()
}

class PrometheusProvider {
  +PROVIDER_CATEGORY: ["Observability"]
  +PROVIDER_DISPLAY_NAME: "Prometheus"
  +query_alerts()
  +query_metrics()
}

class DatadogProvider {
  +PROVIDER_CATEGORY: ["Observability"]
  +PROVIDER_DISPLAY_NAME: "Datadog"
  +query_alerts()
  +query_monitors()
}

class ProvidersFactory {
  +{static} create_provider()
  +{static} get_provider_class()
  +{static} register_provider()
}

BaseProvider <|-- OpenaiProvider
BaseProvider <|-- AnthropicProvider
BaseProvider <|-- SlackProvider
BaseProvider <|-- PrometheusProvider
BaseProvider <|-- DatadogProvider

ProvidersFactory ..> BaseProvider : creates >
BaseProvider --> ProviderConfig : uses >
BaseProvider --> ContextManager : uses >

@enduml 