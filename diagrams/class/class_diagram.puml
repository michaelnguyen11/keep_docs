@startuml Keep_Class_Diagram

' Base table class
abstract class SQLModel {
  + __tablename__: str
}

' Primary entity models
class Tenant {
  + id: UUID
  + name: str
  + slug: str
  + created_date: datetime
  + installed_providers: List[str]
}

class User {
  + id: UUID
  + email: str
  + name: str
  + role: str
  + created_date: datetime
  + tenant_id: UUID
  + is_active: bool
  + password: str
}

class Provider {
  + id: UUID
  + tenant_id: UUID
  + name: str
  + provider_type: str
  + description: str
  + logo: str
  + auth: Dict
  + scopes: List[str]
  + config: Dict
  + is_authenticated: bool
  + created_date: datetime
  + updated_date: datetime
}

class Alert {
  + id: UUID
  + fingerprint: str
  + status: str
  + provider: str
  + name: str
  + description: str
  + event_id: str
  + source: str
  + tenant_id: UUID
  + severity: str
  + source_link: str
  + additional_properties: Dict
  + created_date: datetime
  + incident_id: UUID
  + deduplicated: bool
  + closed: bool
  + closed_date: datetime
  + snoozed: bool
  + snoozed_until: datetime
  + snoozed_by: str
}

class Incident {
  + id: UUID
  + tenant_id: UUID
  + title: str
  + description: str
  + status: str
  + severity: str
  + assignee: str
  + created_date: datetime
  + updated_date: datetime
  + resolved_date: datetime
  + source: str
  + external_id: str
  + alert_count: int
  + rule_id: UUID
  + alerts: List[Alert]
  + environments: List[str]
  + services: List[str]
  + tags: Dict
  + metrics: Dict
}

class Rule {
  + id: UUID
  + tenant_id: UUID
  + name: str
  + description: str
  + condition: str
  + conditions: List[Dict]
  + environments: List[str]
  + services: List[str]
  + enabled: bool
  + group_by: List[str]
  + created_date: datetime
  + updated_date: datetime
  + alert_grouping_window: int
  + alert_grouping_limit: int
  + incident_threshold: int
  + auto_resolve: bool
  + auto_resolve_time: int
  + incident_filter: str
  + check_frequency: int
  + filters: Dict
  + incident_name_template: str
}

class Workflow {
  + id: UUID
  + tenant_id: UUID
  + name: str
  + description: str
  + enabled: bool
  + triggers: Dict
  + steps: Dict
  + constants: Dict
  + created_date: datetime
  + updated_date: datetime
}

class WorkflowRun {
  + id: UUID
  + workflow_id: UUID
  + tenant_id: UUID
  + status: str
  + context: Dict
  + start_time: datetime
  + end_time: datetime
  + logs: List[Dict]
  + steps_results: Dict
  + trigger_origin: str
  + trigger_type: str
}

class Dashboard {
  + id: UUID
  + tenant_id: UUID
  + name: str
  + description: str
  + widgets: List[Dict]
  + created_by: UUID
  + created_date: datetime
  + updated_date: datetime
  + is_default: bool
  + layout: Dict
  + config: Dict
}

class Action {
  + id: UUID
  + tenant_id: UUID
  + name: str
  + description: str
  + action_type: str
  + enabled: bool
  + provider_id: UUID
  + provider_method: str
  + parameters: Dict
  + created_date: datetime
  + updated_date: datetime
}

class Environment {
  + id: UUID
  + tenant_id: UUID
  + name: str
  + description: str
  + created_date: datetime
}

class Service {
  + id: UUID
  + tenant_id: UUID
  + name: str
  + description: str
  + repository_url: str
  + repository_owner: str
  + repository_name: str
  + created_date: datetime
}

' Custom entity models for specific features
class AIConversation {
  + id: UUID
  + tenant_id: UUID
  + user_id: UUID
  + incident_id: UUID
  + messages: List[Dict]
  + created_date: datetime
  + updated_date: datetime
  + active: bool
}

class Feedback {
  + id: UUID
  + tenant_id: UUID
  + user_id: UUID
  + entity_id: UUID
  + entity_type: str
  + rating: int
  + comment: str
  + created_date: datetime
}

class EventLog {
  + id: UUID
  + tenant_id: UUID
  + event_type: str
  + entity_id: UUID
  + entity_type: str
  + data: Dict
  + created_date: datetime
  + user_id: UUID
}

' Relationships
Tenant "1" -- "many" User : has >
Tenant "1" -- "many" Provider : has >
Tenant "1" -- "many" Alert : has >
Tenant "1" -- "many" Incident : has >
Tenant "1" -- "many" Rule : has >
Tenant "1" -- "many" Workflow : has >
Tenant "1" -- "many" Dashboard : has >
Tenant "1" -- "many" Environment : has >
Tenant "1" -- "many" Service : has >

User "many" -- "1" Tenant : belongs to >

Incident "1" -- "many" Alert : contains >
Incident "many" -- "1" Rule : created by >

Workflow "1" -- "many" WorkflowRun : has >

Provider "1" -- "many" Action : enables >

' AIConversation relationships
AIConversation "many" -- "1" User : initiated by >
AIConversation "many" -- "1" Incident : relates to >

' Feedback relationships
Feedback "many" -- "1" User : submitted by >

@enduml 