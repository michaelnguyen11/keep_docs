@startuml C4_Keep_Context_Improved
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml

LAYOUT_WITH_LEGEND()

title System Context diagram for Keep AIOps Platform (Current State)

Person(user, "Platform User", "Operations engineer or developer who manages alerts and incidents")
Person(admin, "Platform Admin", "Administrator who configures and maintains the system")

System_Boundary(keep, "Keep AIOps Platform") {
    System(keepCore, "Keep Core System", "Provides alert management, incident correlation, workflow automation, and AIOps capabilities")
}

Enterprise_Boundary(ai, "AI Services") {
    System_Ext(llmProviders, "LLM Providers", "OpenAI, Anthropic, DeepSeek, Gemini, etc.")
    System_Ext(embeddingProviders, "Embedding Providers", "OpenAI Embeddings, etc.")
    System_Ext(llmselfhosted, "Self-hosted LLMs", "Ollama, LlamaCPP, etc.")
}

Enterprise_Boundary(observability, "Observability Systems") {
    System_Ext(metrics, "Metrics Systems", "Prometheus, Datadog, CloudWatch, Azure Monitoring, GCP Monitoring, etc.")
    System_Ext(logs, "Log Systems", "Elastic, Grafana Loki, Graylog, Coralogix, etc.")
    System_Ext(tracing, "Tracing Systems", "Jaeger, Zipkin, OpenTelemetry, etc.")
    System_Ext(synthetics, "Synthetic Monitoring", "Checkly, etc.")
    System_Ext(infrastructure, "Infrastructure Monitoring", "LibreNMS, NetData, AppDynamics, etc.")
}

Enterprise_Boundary(collaboration, "Collaboration Systems") {
    System_Ext(ticketing, "Ticketing Systems", "Jira, ServiceNow, Linear, GitHub Issues, etc.")
    System_Ext(chat, "Chat Systems", "Slack, Teams, Discord, etc.")
    System_Ext(notification, "Notification Channels", "Email, SMS, PagerDuty, OpsGenie, etc.")
    System_Ext(documentation, "Documentation Systems", "Notion, Confluence, etc.")
}

Rel(user, keepCore, "Uses", "Web UI/API")
Rel(admin, keepCore, "Configures and maintains", "Web UI/API")

' AI Services
Rel_Down(keepCore, llmProviders, "Uses for enrichment, correlation, and incident understanding", "API")
Rel_Down(keepCore, embeddingProviders, "Uses for semantic search and similarity detection", "API")
Rel_Down(keepCore, llmselfhosted, "Uses for on-premise AI capabilities", "API")

' Observability Systems
Rel_Neighbor(observability, keepCore, "Sends alerts to", "Webhooks/API")
Rel(keepCore, metrics, "Queries and manages alerts", "API")
Rel(keepCore, logs, "Queries for context and evidence", "API")
Rel(keepCore, tracing, "Retrieves trace data", "API")
Rel(keepCore, synthetics, "Receives test results", "API/Webhook")
Rel(keepCore, infrastructure, "Receives infrastructure alerts", "API/Webhook")

' Collaboration Systems
Rel_Neighbor(keepCore, ticketing, "Creates and updates tickets", "API")
Rel_U(ticketing, keepCore, "Sends ticket updates", "Webhooks/API")
Rel(keepCore, chat, "Sends notifications and receives commands", "API/Webhook")
Rel(keepCore, notification, "Sends incident notifications", "API")
Rel(keepCore, documentation, "Retrieves context information", "API")

@enduml 