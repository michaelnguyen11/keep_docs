@startuml C4_Keep_Container_Improved
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

title Container diagram for Keep AIOps Platform (Current State)

Person(user, "Platform User", "Operations engineer or developer who manages alerts and incidents")
Person(admin, "Platform Admin", "Administrator who configures and maintains the system")

System_Boundary(keep, "Keep AIOps Platform") {
    Container(webApp, "Keep UI", "TypeScript, Next.js, React, Tailwind CSS", "Provides the web interface for users to manage alerts, incidents, and workflows")
    
    Container_Boundary(backend, "Keep Backend") {
        Container(api, "Keep API", "Python, FastAPI", "Core backend that handles business logic, API endpoints, and orchestrates platform functionality")
        
        Container(workflowManager, "Workflow Manager", "Python", "Manages the definition, scheduling, and execution of workflows")
        
        Container(rulesEngine, "Rules Engine", "Python, CEL", "Evaluates rules for alert processing, correlation, and incident creation")
        
        Container(aiManager, "AI Manager", "Python", "Orchestrates AI operations for enrichment, correlation, and summarization")
        
        Container(alertDeduplicator, "Alert Deduplicator", "Python", "Handles alert deduplication and grouping")
        
        Container(providerIntegrations, "Provider Integrations", "Python", "Manages connections with external observability and collaboration systems")
        
        Container(contextManager, "Context Manager", "Python", "Maintains context across workflow execution and alert processing")
    }
    
    Container(wsServer, "WebSocket Server", "Soketi", "Provides real-time updates and notifications to connected clients")
    
    ContainerDb(database, "Database", "PostgreSQL/MySQL/SQLite", "Stores alerts, incidents, workflows, and configuration")
    
    Container(backgroundTasks, "Background Task Processor", "ARQ/Redis", "Handles asynchronous processing for alerts, incidents, and workflow execution")
    
    Container(secretsManager, "Secrets Manager", "File/K8S/Vault", "Securely stores and manages provider credentials and secrets")
    
    Container(auth, "Authentication", "OAuth2/Keycloak", "Handles user authentication and authorization")
    
    Container(cache, "Cache", "Redis", "Provides caching capabilities for performance optimization")
    
    Container(searchEngine, "Search Engine", "ElasticSearch", "Enables advanced search capabilities for alerts and incidents")
}

System_Ext(metrics, "Metrics Systems", "Prometheus, Datadog, etc.")
System_Ext(logs, "Log Systems", "Elastic, Loki, etc.")
System_Ext(ticketing, "Ticketing Systems", "Jira, ServiceNow, etc.")
System_Ext(chat, "Chat Systems", "Slack, Teams, etc.")
System_Ext(llmProviders, "LLM Providers", "OpenAI, Anthropic, etc.")

' Frontend interactions
Rel(user, webApp, "Uses", "HTTPS")
Rel(admin, webApp, "Configures", "HTTPS")
Rel(webApp, api, "Makes API calls to", "HTTPS/JSON")
Rel(webApp, wsServer, "Subscribes to updates", "WebSocket")

' Core backend interactions
Rel(api, wsServer, "Publishes events to", "Internal")
Rel(api, database, "Reads from and writes to", "SQL/ORM")
Rel(api, backgroundTasks, "Schedules jobs", "Redis")
Rel(api, secretsManager, "Retrieves secrets from", "Internal API")
Rel(api, auth, "Authenticates users via", "OAuth/OIDC")
Rel(api, searchEngine, "Executes searches via", "API")
Rel(api, cache, "Caches data in", "Redis API")

' Backend component interactions
Rel(api, workflowManager, "Delegates workflow operations to", "Internal")
Rel(api, rulesEngine, "Uses for alert processing", "Internal")
Rel(api, alertDeduplicator, "Uses for deduplication", "Internal")
Rel(api, providerIntegrations, "Uses for external communication", "Internal")
Rel(api, aiManager, "Uses for AI operations", "Internal")

Rel(workflowManager, contextManager, "Maintains context with", "Internal")
Rel(workflowManager, providerIntegrations, "Executes actions via", "Internal")
Rel(workflowManager, backgroundTasks, "Schedules workflow execution via", "Redis")

Rel(rulesEngine, providerIntegrations, "Enriches data via", "Internal")
Rel(rulesEngine, aiManager, "Uses for correlation", "Internal")

Rel(aiManager, providerIntegrations, "Retrieves AI services via", "Internal")
Rel(alertDeduplicator, database, "Stores and retrieves alert data", "SQL/ORM")

' External system interactions
Rel(providerIntegrations, secretsManager, "Retrieves credentials from", "Internal API")
Rel(providerIntegrations, metrics, "Interacts with", "API")
Rel(providerIntegrations, logs, "Interacts with", "API")
Rel(providerIntegrations, ticketing, "Interacts with", "API")
Rel(providerIntegrations, chat, "Interacts with", "API")
Rel(providerIntegrations, llmProviders, "Interacts with", "API")

' Background tasks
Rel(backgroundTasks, database, "Reads from and writes to", "SQL/ORM")
Rel(backgroundTasks, secretsManager, "Retrieves secrets from", "Internal API")

' External systems to Keep
Rel_Left(metrics, api, "Sends alerts to", "Webhooks/API")
Rel_Left(logs, api, "Sends alerts to", "Webhooks/API")
Rel_Down(ticketing, api, "Webhook callbacks from", "API")
Rel_Down(chat, api, "Webhook callbacks from", "API")

@enduml 